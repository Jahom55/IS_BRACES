

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "IS_BRACES\Web.config"
//     Connection String Name: "DB"
//     Connection String:      "Data Source=tcp:dbs-srv-01.database.windows.net,1433;Initial Catalog=MOIS_DBS;Integrated Security=False;User Id=mois@dbs-srv-01;password=**zapped**;;Encrypt=True;TrustServerCertificate=False;MultipleActiveResultSets=True"
// ------------------------------------------------------------------------------------------------
// Database Edition       : SQL Azure
// Database Engine Edition: Azure

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace IS_BRACES.Models
{
    using System.Linq;

    #region Unit of work

    public interface IDB_Model : System.IDisposable
    {
        System.Data.Entity.DbSet<Adresa> Adresa { get; set; } // Adresa
        System.Data.Entity.DbSet<Destinace> Destinace { get; set; } // Destinace
        System.Data.Entity.DbSet<Doprava> Doprava { get; set; } // Doprava
        System.Data.Entity.DbSet<Kategorie> Kategorie { get; set; } // Kategorie
        System.Data.Entity.DbSet<KontaktniUdaje> KontaktniUdaje { get; set; } // Kontaktni_udaje
        System.Data.Entity.DbSet<Pojisteni> Pojisteni { get; set; } // Pojisteni
        System.Data.Entity.DbSet<Pojistovny> Pojistovny { get; set; } // Pojistovny
        System.Data.Entity.DbSet<Rezervace> Rezervace { get; set; } // Rezervace
        System.Data.Entity.DbSet<Stravovani> Stravovani { get; set; } // Stravovani
        System.Data.Entity.DbSet<sys_DatabaseFirewallRules> sys_DatabaseFirewallRules { get; set; } // database_firewall_rules
        System.Data.Entity.DbSet<TypUbytovani> TypUbytovani { get; set; } // Typ_ubytovani
        System.Data.Entity.DbSet<TypZajezdu> TypZajezdu { get; set; } // Typ_zajezdu
        System.Data.Entity.DbSet<VazTZakaznikZajezd> VazTZakaznikZajezd { get; set; } // VazT_Zakaznik_Zajezd
        System.Data.Entity.DbSet<Zajezdy> Zajezdy { get; set; } // Zajezdy
        System.Data.Entity.DbSet<Zakaznici> Zakaznici { get; set; } // Zakaznici

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class DB_Model : System.Data.Entity.DbContext, IDB_Model
    {
        public System.Data.Entity.DbSet<Adresa> Adresa { get; set; } // Adresa
        public System.Data.Entity.DbSet<Destinace> Destinace { get; set; } // Destinace
        public System.Data.Entity.DbSet<Doprava> Doprava { get; set; } // Doprava
        public System.Data.Entity.DbSet<Kategorie> Kategorie { get; set; } // Kategorie
        public System.Data.Entity.DbSet<KontaktniUdaje> KontaktniUdaje { get; set; } // Kontaktni_udaje
        public System.Data.Entity.DbSet<Pojisteni> Pojisteni { get; set; } // Pojisteni
        public System.Data.Entity.DbSet<Pojistovny> Pojistovny { get; set; } // Pojistovny
        public System.Data.Entity.DbSet<Rezervace> Rezervace { get; set; } // Rezervace
        public System.Data.Entity.DbSet<Stravovani> Stravovani { get; set; } // Stravovani
        public System.Data.Entity.DbSet<sys_DatabaseFirewallRules> sys_DatabaseFirewallRules { get; set; } // database_firewall_rules
        public System.Data.Entity.DbSet<TypUbytovani> TypUbytovani { get; set; } // Typ_ubytovani
        public System.Data.Entity.DbSet<TypZajezdu> TypZajezdu { get; set; } // Typ_zajezdu
        public System.Data.Entity.DbSet<VazTZakaznikZajezd> VazTZakaznikZajezd { get; set; } // VazT_Zakaznik_Zajezd
        public System.Data.Entity.DbSet<Zajezdy> Zajezdy { get; set; } // Zajezdy
        public System.Data.Entity.DbSet<Zakaznici> Zakaznici { get; set; } // Zakaznici

        static DB_Model()
        {
            System.Data.Entity.Database.SetInitializer<DB_Model>(null);
        }

        public DB_Model()
            : base("Name=DB")
        {
        }

        public DB_Model(string connectionString)
            : base(connectionString)
        {
        }

        public DB_Model(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public DB_Model(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public DB_Model(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AdresaConfiguration());
            modelBuilder.Configurations.Add(new DestinaceConfiguration());
            modelBuilder.Configurations.Add(new DopravaConfiguration());
            modelBuilder.Configurations.Add(new KategorieConfiguration());
            modelBuilder.Configurations.Add(new KontaktniUdajeConfiguration());
            modelBuilder.Configurations.Add(new PojisteniConfiguration());
            modelBuilder.Configurations.Add(new PojistovnyConfiguration());
            modelBuilder.Configurations.Add(new RezervaceConfiguration());
            modelBuilder.Configurations.Add(new StravovaniConfiguration());
            modelBuilder.Configurations.Add(new sys_DatabaseFirewallRulesConfiguration());
            modelBuilder.Configurations.Add(new TypUbytovaniConfiguration());
            modelBuilder.Configurations.Add(new TypZajezduConfiguration());
            modelBuilder.Configurations.Add(new VazTZakaznikZajezdConfiguration());
            modelBuilder.Configurations.Add(new ZajezdyConfiguration());
            modelBuilder.Configurations.Add(new ZakazniciConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AdresaConfiguration(schema));
            modelBuilder.Configurations.Add(new DestinaceConfiguration(schema));
            modelBuilder.Configurations.Add(new DopravaConfiguration(schema));
            modelBuilder.Configurations.Add(new KategorieConfiguration(schema));
            modelBuilder.Configurations.Add(new KontaktniUdajeConfiguration(schema));
            modelBuilder.Configurations.Add(new PojisteniConfiguration(schema));
            modelBuilder.Configurations.Add(new PojistovnyConfiguration(schema));
            modelBuilder.Configurations.Add(new RezervaceConfiguration(schema));
            modelBuilder.Configurations.Add(new StravovaniConfiguration(schema));
            modelBuilder.Configurations.Add(new sys_DatabaseFirewallRulesConfiguration(schema));
            modelBuilder.Configurations.Add(new TypUbytovaniConfiguration(schema));
            modelBuilder.Configurations.Add(new TypZajezduConfiguration(schema));
            modelBuilder.Configurations.Add(new VazTZakaznikZajezdConfiguration(schema));
            modelBuilder.Configurations.Add(new ZajezdyConfiguration(schema));
            modelBuilder.Configurations.Add(new ZakazniciConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class FakeDB_Model : IDB_Model
    {
        public System.Data.Entity.DbSet<Adresa> Adresa { get; set; }
        public System.Data.Entity.DbSet<Destinace> Destinace { get; set; }
        public System.Data.Entity.DbSet<Doprava> Doprava { get; set; }
        public System.Data.Entity.DbSet<Kategorie> Kategorie { get; set; }
        public System.Data.Entity.DbSet<KontaktniUdaje> KontaktniUdaje { get; set; }
        public System.Data.Entity.DbSet<Pojisteni> Pojisteni { get; set; }
        public System.Data.Entity.DbSet<Pojistovny> Pojistovny { get; set; }
        public System.Data.Entity.DbSet<Rezervace> Rezervace { get; set; }
        public System.Data.Entity.DbSet<Stravovani> Stravovani { get; set; }
        public System.Data.Entity.DbSet<sys_DatabaseFirewallRules> sys_DatabaseFirewallRules { get; set; }
        public System.Data.Entity.DbSet<TypUbytovani> TypUbytovani { get; set; }
        public System.Data.Entity.DbSet<TypZajezdu> TypZajezdu { get; set; }
        public System.Data.Entity.DbSet<VazTZakaznikZajezd> VazTZakaznikZajezd { get; set; }
        public System.Data.Entity.DbSet<Zajezdy> Zajezdy { get; set; }
        public System.Data.Entity.DbSet<Zakaznici> Zakaznici { get; set; }

        public FakeDB_Model()
        {
            Adresa = new FakeDbSet<Adresa>("Id");
            Destinace = new FakeDbSet<Destinace>("Id");
            Doprava = new FakeDbSet<Doprava>("Id");
            Kategorie = new FakeDbSet<Kategorie>("Id");
            KontaktniUdaje = new FakeDbSet<KontaktniUdaje>("Id");
            Pojisteni = new FakeDbSet<Pojisteni>("Id");
            Pojistovny = new FakeDbSet<Pojistovny>("Id");
            Rezervace = new FakeDbSet<Rezervace>("Id");
            Stravovani = new FakeDbSet<Stravovani>("Id");
            sys_DatabaseFirewallRules = new FakeDbSet<sys_DatabaseFirewallRules>("Id", "Name", "StartIpAddress", "EndIpAddress", "CreateDate", "ModifyDate");
            TypUbytovani = new FakeDbSet<TypUbytovani>("Id");
            TypZajezdu = new FakeDbSet<TypZajezdu>("Id");
            VazTZakaznikZajezd = new FakeDbSet<VazTZakaznikZajezd>("Id");
            Zajezdy = new FakeDbSet<Zajezdy>("Id");
            Zakaznici = new FakeDbSet<Zakaznici>("Id");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        public System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        public System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        public System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            return new FakeDbAsyncEnumerable<TElement>(expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // Adresa
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Adresa
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Ulice { get; set; } // Ulice (length: 255)
        public string Mesto { get; set; } // Mesto (length: 255)
        public string Psc { get; set; } // PSC (length: 6)
        public string Cp { get; set; } // CP (length: 10)

        // Reverse navigation

        /// <summary>
        /// Child Zakaznici where [Zakaznici].[ID_Bydliste] point to this entity (FK_Zakaznici_Adresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Zakaznici> Zakaznici { get; set; } // Zakaznici.FK_Zakaznici_Adresa

        public Adresa()
        {
            Id = System.Guid.NewGuid();
            Zakaznici = new System.Collections.Generic.List<Zakaznici>();
        }
    }

    // Destinace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Destinace
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Zeme { get; set; } // Zeme (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child Zajezdy where [Zajezdy].[ID_Destinace] point to this entity (FK_Zajezdy_Destinace)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Zajezdy> Zajezdy { get; set; } // Zajezdy.FK_Zajezdy_Destinace

        public Destinace()
        {
            Id = System.Guid.NewGuid();
            Zajezdy = new System.Collections.Generic.List<Zajezdy>();
        }
    }

    // Doprava
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Doprava
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Type { get; set; } // Type (length: 250)

        // Reverse navigation

        /// <summary>
        /// Child Zajezdy where [Zajezdy].[ID_Doprava] point to this entity (FK_Zajezdy_Doprava)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Zajezdy> Zajezdy { get; set; } // Zajezdy.FK_Zajezdy_Doprava

        public Doprava()
        {
            Id = System.Guid.NewGuid();
            Zajezdy = new System.Collections.Generic.List<Zajezdy>();
        }
    }

    // Kategorie
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Kategorie
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Popis { get; set; } // Popis

        // Reverse navigation

        /// <summary>
        /// Child Zajezdy where [Zajezdy].[ID_Kategorie] point to this entity (FK_Zajezdy_Kategorie)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Zajezdy> Zajezdy { get; set; } // Zajezdy.FK_Zajezdy_Kategorie

        public Kategorie()
        {
            Id = System.Guid.NewGuid();
            Zajezdy = new System.Collections.Generic.List<Zajezdy>();
        }
    }

    // Kontaktni_udaje
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class KontaktniUdaje
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Email { get; set; } // Email (length: 255)
        public string Telefon { get; set; } // Telefon (length: 20)

        // Reverse navigation

        /// <summary>
        /// Child Zakaznici where [Zakaznici].[ID_Kontaktni_udaje] point to this entity (FK_Zakaznici_Kontaktni_udaje)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Zakaznici> Zakaznici { get; set; } // Zakaznici.FK_Zakaznici_Kontaktni_udaje

        public KontaktniUdaje()
        {
            Id = System.Guid.NewGuid();
            Zakaznici = new System.Collections.Generic.List<Zakaznici>();
        }
    }

    // Pojisteni
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Pojisteni
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public System.Guid IdPojistovna { get; set; } // ID_Pojistovna
        public decimal Cena { get; set; } // Cena
        public string Typ { get; set; } // Typ (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child Rezervace where [Rezervace].[ID_Pojisteni] point to this entity (FK_Rezervace_Pojisteni)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Rezervace> Rezervace { get; set; } // Rezervace.FK_Rezervace_Pojisteni

        // Foreign keys

        /// <summary>
        /// Parent Pojistovny pointed by [Pojisteni].([IdPojistovna]) (FK_Pojisteni_Pojistovny)
        /// </summary>
        public virtual Pojistovny Pojistovny { get; set; } // FK_Pojisteni_Pojistovny

        public Pojisteni()
        {
            Id = System.Guid.NewGuid();
            Rezervace = new System.Collections.Generic.List<Rezervace>();
        }
    }

    // Pojistovny
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Pojistovny
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Nazev { get; set; } // Nazev (length: 255)
        public string Kod { get; set; } // Kod (length: 4)

        // Reverse navigation

        /// <summary>
        /// Child Pojisteni where [Pojisteni].[ID_Pojistovna] point to this entity (FK_Pojisteni_Pojistovny)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Pojisteni> Pojisteni { get; set; } // Pojisteni.FK_Pojisteni_Pojistovny

        public Pojistovny()
        {
            Id = System.Guid.NewGuid();
            Pojisteni = new System.Collections.Generic.List<Pojisteni>();
        }
    }

    // Rezervace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Rezervace
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public System.Guid IdZajezdu { get; set; } // ID_Zajezdu
        public System.DateTime DatumVytvoreni { get; set; } // Datum_vytvoreni
        public System.Guid IdZakaznika { get; set; } // ID_Zakaznika
        public System.Guid? IdPojisteni { get; set; } // ID_Pojisteni

        // Foreign keys

        /// <summary>
        /// Parent Pojisteni pointed by [Rezervace].([IdPojisteni]) (FK_Rezervace_Pojisteni)
        /// </summary>
        public virtual Pojisteni Pojisteni { get; set; } // FK_Rezervace_Pojisteni
        /// <summary>
        /// Parent Zajezdy pointed by [Rezervace].([IdZajezdu]) (FK_Rezervace_Zajezdy)
        /// </summary>
        public virtual Zajezdy Zajezdy { get; set; } // FK_Rezervace_Zajezdy
        /// <summary>
        /// Parent Zakaznici pointed by [Rezervace].([IdZakaznika]) (FK_Rezervace_Zakaznici)
        /// </summary>
        public virtual Zakaznici Zakaznici { get; set; } // FK_Rezervace_Zakaznici

        public Rezervace()
        {
            Id = System.Guid.NewGuid();
        }
    }

    // Stravovani
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Stravovani
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Typ { get; set; } // Typ

        // Reverse navigation

        /// <summary>
        /// Child Zajezdy where [Zajezdy].[ID_Stravovani] point to this entity (FK_Zajezdy_Stravovani)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Zajezdy> Zajezdy { get; set; } // Zajezdy.FK_Zajezdy_Stravovani

        public Stravovani()
        {
            Id = System.Guid.NewGuid();
            Zajezdy = new System.Collections.Generic.List<Zajezdy>();
        }
    }

    // database_firewall_rules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class sys_DatabaseFirewallRules
    {
        public int Id { get; set; } // id (Primary key)
        public string Name { get; set; } // name (Primary key) (length: 128)
        public string StartIpAddress { get; set; } // start_ip_address (Primary key) (length: 45)
        public string EndIpAddress { get; set; } // end_ip_address (Primary key) (length: 45)
        public System.DateTime CreateDate { get; set; } // create_date (Primary key)
        public System.DateTime ModifyDate { get; set; } // modify_date (Primary key)
    }

    // Typ_ubytovani
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class TypUbytovani
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Typ { get; set; } // Typ

        // Reverse navigation

        /// <summary>
        /// Child Zajezdy where [Zajezdy].[ID_Typ_ubytovani] point to this entity (FK_Zajezdy_Typ_ubytovani)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Zajezdy> Zajezdy { get; set; } // Zajezdy.FK_Zajezdy_Typ_ubytovani

        public TypUbytovani()
        {
            Id = System.Guid.NewGuid();
            Zajezdy = new System.Collections.Generic.List<Zajezdy>();
        }
    }

    // Typ_zajezdu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class TypZajezdu
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Popis { get; set; } // Popis

        // Reverse navigation

        /// <summary>
        /// Child Zajezdy where [Zajezdy].[ID_Typ_zajezdu] point to this entity (FK_Zajezdy_Typ_zajezdu)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Zajezdy> Zajezdy { get; set; } // Zajezdy.FK_Zajezdy_Typ_zajezdu

        public TypZajezdu()
        {
            Id = System.Guid.NewGuid();
            Zajezdy = new System.Collections.Generic.List<Zajezdy>();
        }
    }

    // VazT_Zakaznik_Zajezd
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class VazTZakaznikZajezd
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public System.Guid IdZakaznik { get; set; } // ID_Zakaznik
        public System.Guid IdZajezd { get; set; } // ID_Zajezd

        // Foreign keys

        /// <summary>
        /// Parent Zajezdy pointed by [VazT_Zakaznik_Zajezd].([IdZajezd]) (FK_VazT_Zakaznik_Zajezd_Zajezdy)
        /// </summary>
        public virtual Zajezdy Zajezdy { get; set; } // FK_VazT_Zakaznik_Zajezd_Zajezdy
        /// <summary>
        /// Parent Zakaznici pointed by [VazT_Zakaznik_Zajezd].([IdZakaznik]) (FK_VazT_Zakaznik_Zajezd_Zakaznici)
        /// </summary>
        public virtual Zakaznici Zakaznici { get; set; } // FK_VazT_Zakaznik_Zajezd_Zakaznici

        public VazTZakaznikZajezd()
        {
            Id = System.Guid.NewGuid();
        }
    }

    // Zajezdy
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Zajezdy
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public System.Guid IdTypZajezdu { get; set; } // ID_Typ_zajezdu
        public System.Guid IdDestinace { get; set; } // ID_Destinace
        public System.Guid IdDoprava { get; set; } // ID_Doprava
        public System.Guid IdStravovani { get; set; } // ID_Stravovani
        public System.Guid IdTypUbytovani { get; set; } // ID_Typ_ubytovani
        public System.Guid IdKategorie { get; set; } // ID_Kategorie
        public System.DateTime DatumOd { get; set; } // Datum_od
        public int DelkaPobytu { get; set; } // Delka_pobytu
        public decimal Cena { get; set; } // Cena
        public int Kapacita { get; set; } // Kapacita
        public System.DateTime? DatumZruseni { get; set; } // Datum_zruseni
        public string Popis { get; set; } // Popis

        // Reverse navigation

        /// <summary>
        /// Child Rezervace where [Rezervace].[ID_Zajezdu] point to this entity (FK_Rezervace_Zajezdy)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Rezervace> Rezervace { get; set; } // Rezervace.FK_Rezervace_Zajezdy
        /// <summary>
        /// Child VazTZakaznikZajezd where [VazT_Zakaznik_Zajezd].[ID_Zajezd] point to this entity (FK_VazT_Zakaznik_Zajezd_Zajezdy)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<VazTZakaznikZajezd> VazTZakaznikZajezd { get; set; } // VazT_Zakaznik_Zajezd.FK_VazT_Zakaznik_Zajezd_Zajezdy

        // Foreign keys

        /// <summary>
        /// Parent Destinace pointed by [Zajezdy].([IdDestinace]) (FK_Zajezdy_Destinace)
        /// </summary>
        public virtual Destinace Destinace { get; set; } // FK_Zajezdy_Destinace
        /// <summary>
        /// Parent Doprava pointed by [Zajezdy].([IdDoprava]) (FK_Zajezdy_Doprava)
        /// </summary>
        public virtual Doprava Doprava { get; set; } // FK_Zajezdy_Doprava
        /// <summary>
        /// Parent Kategorie pointed by [Zajezdy].([IdKategorie]) (FK_Zajezdy_Kategorie)
        /// </summary>
        public virtual Kategorie Kategorie { get; set; } // FK_Zajezdy_Kategorie
        /// <summary>
        /// Parent Stravovani pointed by [Zajezdy].([IdStravovani]) (FK_Zajezdy_Stravovani)
        /// </summary>
        public virtual Stravovani Stravovani { get; set; } // FK_Zajezdy_Stravovani
        /// <summary>
        /// Parent TypUbytovani pointed by [Zajezdy].([IdTypUbytovani]) (FK_Zajezdy_Typ_ubytovani)
        /// </summary>
        public virtual TypUbytovani TypUbytovani { get; set; } // FK_Zajezdy_Typ_ubytovani
        /// <summary>
        /// Parent TypZajezdu pointed by [Zajezdy].([IdTypZajezdu]) (FK_Zajezdy_Typ_zajezdu)
        /// </summary>
        public virtual TypZajezdu TypZajezdu { get; set; } // FK_Zajezdy_Typ_zajezdu

        public Zajezdy()
        {
            Id = System.Guid.NewGuid();
            Rezervace = new System.Collections.Generic.List<Rezervace>();
            VazTZakaznikZajezd = new System.Collections.Generic.List<VazTZakaznikZajezd>();
        }
    }

    // Zakaznici
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Zakaznici
    {
        public System.Guid Id { get; set; } // ID (Primary key)
        public string Jmeno { get; set; } // Jmeno (length: 255)
        public string Prijmeni { get; set; } // Prijmeni (length: 255)
        public System.Guid? IdBydliste { get; set; } // ID_Bydliste
        public System.Guid? IdKontaktniUdaje { get; set; } // ID_Kontaktni_udaje

        // Reverse navigation

        /// <summary>
        /// Child Rezervace where [Rezervace].[ID_Zakaznika] point to this entity (FK_Rezervace_Zakaznici)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Rezervace> Rezervace { get; set; } // Rezervace.FK_Rezervace_Zakaznici
        /// <summary>
        /// Child VazTZakaznikZajezd where [VazT_Zakaznik_Zajezd].[ID_Zakaznik] point to this entity (FK_VazT_Zakaznik_Zajezd_Zakaznici)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<VazTZakaznikZajezd> VazTZakaznikZajezd { get; set; } // VazT_Zakaznik_Zajezd.FK_VazT_Zakaznik_Zajezd_Zakaznici

        // Foreign keys

        /// <summary>
        /// Parent Adresa pointed by [Zakaznici].([IdBydliste]) (FK_Zakaznici_Adresa)
        /// </summary>
        public virtual Adresa Adresa { get; set; } // FK_Zakaznici_Adresa
        /// <summary>
        /// Parent KontaktniUdaje pointed by [Zakaznici].([IdKontaktniUdaje]) (FK_Zakaznici_Kontaktni_udaje)
        /// </summary>
        public virtual KontaktniUdaje KontaktniUdaje { get; set; } // FK_Zakaznici_Kontaktni_udaje

        public Zakaznici()
        {
            Id = System.Guid.NewGuid();
            Rezervace = new System.Collections.Generic.List<Rezervace>();
            VazTZakaznikZajezd = new System.Collections.Generic.List<VazTZakaznikZajezd>();
        }
    }

    #endregion

    #region POCO Configuration

    // Adresa
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class AdresaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Adresa>
    {
        public AdresaConfiguration()
            : this("dbo")
        {
        }

        public AdresaConfiguration(string schema)
        {
            ToTable("Adresa", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ulice).HasColumnName(@"Ulice").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Mesto).HasColumnName(@"Mesto").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Psc).HasColumnName(@"PSC").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Cp).HasColumnName(@"CP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
        }
    }

    // Destinace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class DestinaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Destinace>
    {
        public DestinaceConfiguration()
            : this("dbo")
        {
        }

        public DestinaceConfiguration(string schema)
        {
            ToTable("Destinace", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Zeme).HasColumnName(@"Zeme").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
        }
    }

    // Doprava
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class DopravaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Doprava>
    {
        public DopravaConfiguration()
            : this("dbo")
        {
        }

        public DopravaConfiguration(string schema)
        {
            ToTable("Doprava", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
        }
    }

    // Kategorie
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class KategorieConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Kategorie>
    {
        public KategorieConfiguration()
            : this("dbo")
        {
        }

        public KategorieConfiguration(string schema)
        {
            ToTable("Kategorie", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Popis).HasColumnName(@"Popis").HasColumnType("varchar(max)").IsRequired().IsUnicode(false);
        }
    }

    // Kontaktni_udaje
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class KontaktniUdajeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KontaktniUdaje>
    {
        public KontaktniUdajeConfiguration()
            : this("dbo")
        {
        }

        public KontaktniUdajeConfiguration(string schema)
        {
            ToTable("Kontaktni_udaje", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Telefon).HasColumnName(@"Telefon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
        }
    }

    // Pojisteni
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class PojisteniConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Pojisteni>
    {
        public PojisteniConfiguration()
            : this("dbo")
        {
        }

        public PojisteniConfiguration(string schema)
        {
            ToTable("Pojisteni", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdPojistovna).HasColumnName(@"ID_Pojistovna").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Cena).HasColumnName(@"Cena").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Typ).HasColumnName(@"Typ").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);

            // Foreign keys
            HasRequired(a => a.Pojistovny).WithMany(b => b.Pojisteni).HasForeignKey(c => c.IdPojistovna).WillCascadeOnDelete(false); // FK_Pojisteni_Pojistovny
        }
    }

    // Pojistovny
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class PojistovnyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Pojistovny>
    {
        public PojistovnyConfiguration()
            : this("dbo")
        {
        }

        public PojistovnyConfiguration(string schema)
        {
            ToTable("Pojistovny", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Nazev).HasColumnName(@"Nazev").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Kod).HasColumnName(@"Kod").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
        }
    }

    // Rezervace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class RezervaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Rezervace>
    {
        public RezervaceConfiguration()
            : this("dbo")
        {
        }

        public RezervaceConfiguration(string schema)
        {
            ToTable("Rezervace", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdZajezdu).HasColumnName(@"ID_Zajezdu").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.DatumVytvoreni).HasColumnName(@"Datum_vytvoreni").HasColumnType("datetime2").IsRequired();
            Property(x => x.IdZakaznika).HasColumnName(@"ID_Zakaznika").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IdPojisteni).HasColumnName(@"ID_Pojisteni").HasColumnType("uniqueidentifier").IsOptional();

            // Foreign keys
            HasOptional(a => a.Pojisteni).WithMany(b => b.Rezervace).HasForeignKey(c => c.IdPojisteni).WillCascadeOnDelete(false); // FK_Rezervace_Pojisteni
            HasRequired(a => a.Zajezdy).WithMany(b => b.Rezervace).HasForeignKey(c => c.IdZajezdu).WillCascadeOnDelete(false); // FK_Rezervace_Zajezdy
            HasRequired(a => a.Zakaznici).WithMany(b => b.Rezervace).HasForeignKey(c => c.IdZakaznika).WillCascadeOnDelete(false); // FK_Rezervace_Zakaznici
        }
    }

    // Stravovani
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class StravovaniConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Stravovani>
    {
        public StravovaniConfiguration()
            : this("dbo")
        {
        }

        public StravovaniConfiguration(string schema)
        {
            ToTable("Stravovani", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Typ).HasColumnName(@"Typ").HasColumnType("varchar(max)").IsRequired().IsUnicode(false);
        }
    }

    // database_firewall_rules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class sys_DatabaseFirewallRulesConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<sys_DatabaseFirewallRules>
    {
        public sys_DatabaseFirewallRulesConfiguration()
            : this("sys")
        {
        }

        public sys_DatabaseFirewallRulesConfiguration(string schema)
        {
            ToTable("database_firewall_rules", schema);
            HasKey(x => new { x.Id, x.Name, x.StartIpAddress, x.EndIpAddress, x.CreateDate, x.ModifyDate });

            Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"name").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StartIpAddress).HasColumnName(@"start_ip_address").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(45).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndIpAddress).HasColumnName(@"end_ip_address").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(45).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CreateDate).HasColumnName(@"create_date").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ModifyDate).HasColumnName(@"modify_date").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // Typ_ubytovani
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class TypUbytovaniConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TypUbytovani>
    {
        public TypUbytovaniConfiguration()
            : this("dbo")
        {
        }

        public TypUbytovaniConfiguration(string schema)
        {
            ToTable("Typ_ubytovani", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Typ).HasColumnName(@"Typ").HasColumnType("varchar(max)").IsRequired().IsUnicode(false);
        }
    }

    // Typ_zajezdu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class TypZajezduConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TypZajezdu>
    {
        public TypZajezduConfiguration()
            : this("dbo")
        {
        }

        public TypZajezduConfiguration(string schema)
        {
            ToTable("Typ_zajezdu", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Popis).HasColumnName(@"Popis").HasColumnType("varchar(max)").IsRequired().IsUnicode(false);
        }
    }

    // VazT_Zakaznik_Zajezd
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class VazTZakaznikZajezdConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VazTZakaznikZajezd>
    {
        public VazTZakaznikZajezdConfiguration()
            : this("dbo")
        {
        }

        public VazTZakaznikZajezdConfiguration(string schema)
        {
            ToTable("VazT_Zakaznik_Zajezd", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdZakaznik).HasColumnName(@"ID_Zakaznik").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IdZajezd).HasColumnName(@"ID_Zajezd").HasColumnType("uniqueidentifier").IsRequired();

            // Foreign keys
            HasRequired(a => a.Zajezdy).WithMany(b => b.VazTZakaznikZajezd).HasForeignKey(c => c.IdZajezd).WillCascadeOnDelete(false); // FK_VazT_Zakaznik_Zajezd_Zajezdy
            HasRequired(a => a.Zakaznici).WithMany(b => b.VazTZakaznikZajezd).HasForeignKey(c => c.IdZakaznik).WillCascadeOnDelete(false); // FK_VazT_Zakaznik_Zajezd_Zakaznici
        }
    }

    // Zajezdy
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class ZajezdyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Zajezdy>
    {
        public ZajezdyConfiguration()
            : this("dbo")
        {
        }

        public ZajezdyConfiguration(string schema)
        {
            ToTable("Zajezdy", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdTypZajezdu).HasColumnName(@"ID_Typ_zajezdu").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IdDestinace).HasColumnName(@"ID_Destinace").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IdDoprava).HasColumnName(@"ID_Doprava").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IdStravovani).HasColumnName(@"ID_Stravovani").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IdTypUbytovani).HasColumnName(@"ID_Typ_ubytovani").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IdKategorie).HasColumnName(@"ID_Kategorie").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.DatumOd).HasColumnName(@"Datum_od").HasColumnType("datetime2").IsRequired();
            Property(x => x.DelkaPobytu).HasColumnName(@"Delka_pobytu").HasColumnType("int").IsRequired();
            Property(x => x.Cena).HasColumnName(@"Cena").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Kapacita).HasColumnName(@"Kapacita").HasColumnType("int").IsRequired();
            Property(x => x.DatumZruseni).HasColumnName(@"Datum_zruseni").HasColumnType("datetime2").IsOptional();
            Property(x => x.Popis).HasColumnName(@"Popis").HasColumnType("varchar(max)").IsRequired().IsUnicode(false);

            // Foreign keys
            HasRequired(a => a.Destinace).WithMany(b => b.Zajezdy).HasForeignKey(c => c.IdDestinace).WillCascadeOnDelete(false); // FK_Zajezdy_Destinace
            HasRequired(a => a.Doprava).WithMany(b => b.Zajezdy).HasForeignKey(c => c.IdDoprava).WillCascadeOnDelete(false); // FK_Zajezdy_Doprava
            HasRequired(a => a.Kategorie).WithMany(b => b.Zajezdy).HasForeignKey(c => c.IdKategorie).WillCascadeOnDelete(false); // FK_Zajezdy_Kategorie
            HasRequired(a => a.Stravovani).WithMany(b => b.Zajezdy).HasForeignKey(c => c.IdStravovani).WillCascadeOnDelete(false); // FK_Zajezdy_Stravovani
            HasRequired(a => a.TypUbytovani).WithMany(b => b.Zajezdy).HasForeignKey(c => c.IdTypUbytovani).WillCascadeOnDelete(false); // FK_Zajezdy_Typ_ubytovani
            HasRequired(a => a.TypZajezdu).WithMany(b => b.Zajezdy).HasForeignKey(c => c.IdTypZajezdu).WillCascadeOnDelete(false); // FK_Zajezdy_Typ_zajezdu
        }
    }

    // Zakaznici
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class ZakazniciConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Zakaznici>
    {
        public ZakazniciConfiguration()
            : this("dbo")
        {
        }

        public ZakazniciConfiguration(string schema)
        {
            ToTable("Zakaznici", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Jmeno).HasColumnName(@"Jmeno").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Prijmeni).HasColumnName(@"Prijmeni").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.IdBydliste).HasColumnName(@"ID_Bydliste").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.IdKontaktniUdaje).HasColumnName(@"ID_Kontaktni_udaje").HasColumnType("uniqueidentifier").IsOptional();

            // Foreign keys
            HasOptional(a => a.Adresa).WithMany(b => b.Zakaznici).HasForeignKey(c => c.IdBydliste).WillCascadeOnDelete(false); // FK_Zakaznici_Adresa
            HasOptional(a => a.KontaktniUdaje).WithMany(b => b.Zakaznici).HasForeignKey(c => c.IdKontaktniUdaje).WillCascadeOnDelete(false); // FK_Zakaznici_Kontaktni_udaje
        }
    }

    #endregion

}
// </auto-generated>

